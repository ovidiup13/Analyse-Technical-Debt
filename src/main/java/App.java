import java.io.File;
import java.io.IOException;
import java.nio.file.Paths;
import java.sql.SQLOutput;

import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.api.errors.InvalidRemoteException;
import org.eclipse.jgit.api.errors.JGitInternalException;
import org.eclipse.jgit.api.errors.TransportException;
import org.eclipse.jgit.lib.Repository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import vcs.GitProcessor;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

    private static Logger LOGGER = LoggerFactory.getLogger(App.class);

    public static void main(String[] args) {

        String tmp = Paths.get(System.getProperty("user.dir"), "tmp").toString();
        File repoPath = new File(Paths.get(tmp, "zeppelin").toString());
        String uri = "https://github.com/apache/zeppelin.git";

        try (GitProcessor zeppelin = new GitProcessor(uri, repoPath)) {
            System.out.println(zeppelin.getCommits());
        } catch (InvalidRemoteException e) {
            LOGGER.error("InvalidRemoteException", e);
        } catch (TransportException e) {
            LOGGER.error("TransportException", e);
        } catch (GitAPIException e) {
            LOGGER.error("GitAPIException", e);
        } catch (JGitInternalException e) { // destination exists
            LOGGER.error("JGitInternalException", e);
            // open repository
        } catch (Exception e) {
            LOGGER.error("Exception", e);
        }
    }

}
